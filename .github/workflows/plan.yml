name: plan

on: 
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      pathToPlan:
        required: true
        type: string
    secrets:
      GOOGLE_CREDENTIALS:
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -recursive -no-color
        continue-on-error: true

      - name: Terraform init
        id: init
        run: terraform -chdir=${{ inputs.pathToPlan }} init -no-color
        env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform validate
        id: validate
        run: terraform -chdir=${{ inputs.pathToPlan }} validate -no-color
        env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform plan
        id: plan
        run: terraform -chdir=${{ inputs.pathToPlan }} plan -no-color
        continue-on-error: true
        env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Update pull request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@0.9.0
        env:
          FMT: "${{ steps.fmt.outputs.stdout }}"
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
              #### ${{ inputs.environment }} results:

              <details><summary>Terraform Fmt: <code>${{ steps.fmt.outcome }}</code></summary><br>

              \`\`\`\n
              ${process.env.FMT}
              \`\`\`

              </details>

              <details><summary>Terraform Plan: <code>${{ steps.plan.outcome }}</code></summary><br>

              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`

              </details>
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform fmt status
        if: steps.fmt.outcome == 'failure'
        run: |
          echo "${{ steps.fmt.outputs.stdout }}" && exit 1

      - name: Terraform plan statu
        if: steps.plan.outcome == 'failure'
        run: |
          echo "${{ steps.plan.outputs.stdout }}" && exit 1
